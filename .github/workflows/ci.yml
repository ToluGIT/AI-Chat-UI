name: CI Pipeline

on:
  push:
    branches: [ github-workflow ]
  pull_request:
    branches: [ github-workflow ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: toluid/aichatui

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run NPM Security Audit
        run: |
          mkdir -p reports
          npm audit --json > reports/npm-audit.json || true
          echo "NPM Audit completed and saved to reports/npm-audit.json"
          
      - name: Upload NPM Audit Results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            /github/workspace/reports/npm-audit.json
            /github/workspace/reports/dependency-check-report.*
            /github/workspace/trivy-fs-results.sarif
            /github/workspace/trivy-image-results.sarif
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ToluGIT_AIChatUI
            -Dsonar.organization=tolugit
            
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        with:
          project: 'AIChatUI'
          path: '.'
          format: 'ALL'
          args: >
            --disableYarnAudit
            --disableNodeAudit
            --nvdApiKey '${{ secrets.NVD_API_KEY }}'
            --prettyPrint
            --out ./reports
            
      - name: Upload Dependency Check results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: '/github/workspace/reports/dependency-check-report.sarif'
          
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          
      - name: Upload Trivy filesystem scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-fs-results.sarif'
          
  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          
      - name: Upload Trivy image scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
